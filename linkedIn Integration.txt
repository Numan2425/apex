public class IntegrationLinkedIn {

    public static void postOnLinkedIn(string message){
        string loginId = signIntoLinkedTogetId();
        postMessage(loginId,message);
    }
    
    public static void postMessage(string loginId , string message){
        http http = new http();
        httpRequest req = new httpRequest();
        req.setMethod('POST');
        
        req.setHeader('X-Restli-Protocol-Version','2.0.0');
        req.setHeader('Content-Type','application/json');
        string authorId = 'urn:li:person:'+loginId;
        string linkedInPostBody =
            '{'+
    '"author": "'+authorId+'",'+
    '"lifecycleState": "PUBLISHED",'+
    '"specificContent": {'+
        '"com.linkedin.ugc.ShareContent": {'+
            '"shareCommentary": {'+
                '"text": "'+message+'"'+
            '},'+
            '"shareMediaCategory": "NONE"'+
        '}'+
    '},'+
    '"visibility": {'+
        '"com.linkedin.ugc.MemberNetworkVisibility": "PUBLIC"'+
    '}'+
'}';
        req.setEndPoint('callout:NameCredentialsForLinkedIn/v2/ugcPosts');
        req.setBody(linkedInPostBody);
        
        httpResponse res = http.send(req);
        system.debug('responseBody'+res.getbody());
        system.debug('responseBody'+res.getstatusCode());

    }
    
    public static string signIntoLinkedTogetId(){
        http http = new http();
        httpRequest req = new httpRequest();
		req.setMethod('GET');
        req.setEndPoint('callout:NameCredentialsForLinkedIn/v2/userinfo');
        httpResponse res =http.send(req);
        system.debug('response' + res.getBody());
        map<string,object> responseMap = (map<string,object>) json.deserializeuntyped(res.getbody());
        string loginId = (string)responseMap.get('sub');
        system.debug(loginId);
        return loginId;
    }
}